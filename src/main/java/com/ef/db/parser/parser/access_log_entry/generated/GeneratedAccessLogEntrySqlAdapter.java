/*
 * Created by Luke DeRienzo on 2/25/19 9:34 PM
 * Copyright (c) 2019. All rights reserved
 *
 * Last modified: 8/15/18 12:29 PM
 */

package com.ef.db.parser.parser.access_log_entry.generated;

import com.ef.db.parser.parser.access_log_entry.AccessLogEntry;
import com.ef.db.parser.parser.access_log_entry.AccessLogEntryImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.annotation.ExecuteBefore;
import com.speedment.runtime.config.Project;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.ProjectComponent;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.component.sql.SqlTypeMapperHelper;
import com.speedment.runtime.core.db.SqlFunction;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.ef.db.parser.parser.access_log_entry.AccessLogEntry} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccessLogEntrySqlAdapter implements SqlAdapter<AccessLogEntry> {
    
    private final TableIdentifier<AccessLogEntry> tableIdentifier;
    private SqlTypeMapperHelper<Timestamp, LocalDateTime> dateHelper;
    
    protected GeneratedAccessLogEntrySqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("parser", "parser", "access_log");
    }
    
    protected AccessLogEntry apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(        resultSet.getLong(1 + offset))
            .setDate(      dateHelper.apply(resultSet.getTimestamp(2 + offset)))
            .setIpAddress( resultSet.getLong(3 + offset))
            .setRequest(   resultSet.getString(4 + offset))
            .setStatus(    resultSet.getInt(5 + offset))
            .setUserAgent( resultSet.getString(6 + offset))
            ;
    }
    
    protected AccessLogEntryImpl createEntity() {
        return new AccessLogEntryImpl();
    }
    
    @Override
    public TableIdentifier<AccessLogEntry> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, AccessLogEntry> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, AccessLogEntry> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
    
    @ExecuteBefore(RESOLVED)
    void createHelpers(ProjectComponent projectComponent) {
        final Project project = projectComponent.getProject();
        dateHelper = SqlTypeMapperHelper.create(project, AccessLogEntry.DATE, AccessLogEntry.class);
    }
}