package com.ef.parser.db.parser.parser.access_log.generated;

import com.ef.parser.db.parser.parser.access_log.AccessLog;
import com.ef.parser.db.parser.parser.access_log.AccessLogManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.ef.parser.db.parser.parser.access_log.AccessLog} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedAccessLogManagerImpl 
extends AbstractManager<AccessLog> 
implements GeneratedAccessLogManager {
    
    private final TableIdentifier<AccessLog> tableIdentifier;
    
    protected GeneratedAccessLogManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("parser", "parser", "access_log");
    }
    
    @Override
    public TableIdentifier<AccessLog> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<AccessLog>> fields() {
        return AccessLogManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<AccessLog>> primaryKeyFields() {
        return Stream.of(
            AccessLog.ID
        );
    }
}